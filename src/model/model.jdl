entity MetaLecture{
	weekDay String
  	startTime String
  	endTime String
}

entity College { 
shortName String required
logoPath String
backgroundImagePath String
instructionInformation String
logoFileName String
backgroundImageFileName String
}
entity Branch{
branchName String required
address1 String required
address2 String required
branchHead String required
}
entity Department{
name String required
description String required
deptHead String required
}

entity Batch{
batch BatchEnum required
}

enum BatchEnum{
FIRSTYEAR,SECONDYEAR,THIRDYEAR,FOURTHYEAR
}

entity Subject{
subjectCode String required
subjectType SubTypeEnum required
subjectDesc  String required
status Status required
}

enum SubTypeEnum{
COMMON,ELECTIVE
}

entity Section{
section SectionEnum required
}

enum SectionEnum{
A,B,C,D
}

entity Term{
termsDesc String required
startDate LocalDate required
endDate LocalDate required
termStatus Status required
}

enum Status {
ACTIVE,DEACTIVE
}

enum InvoicePaymentStatus {
PAID,UNPAID,CANCELED
}

enum Gender {
    MALE, FEMALE, OTHER
}

enum Religion{
   HINDU,MUSLIM,CHRISTIAN
}

enum Caste{
  OC,BC,SC,ST
}

enum Bloodgroup{
  ABPOSITIVE,ABNEGATIVE,OPOSITIVE,BPOSITIVE,BNEGATIVE
}

enum RelationWithStudentEnum{
  FATHER,MOTHER,GUARDIAN
}

enum StudentTypeEnum{
    REGULAR,STAFF_CONCESSION,BENEFITS,SCHOLARSHIP,OTHER_BENEFITS
}

enum Frequency {
    WEEKLY, MONTHLY, QUARTERLY, HALFYEARLY, ANNUALLY
}

enum ModeOfPayment{
CARD, CASH, NETBANKING, CHEQUE, DEMANDDRAFT
}

entity Student{
studentName String required
studentMiddleName String required
studentLastName String required
fatherName String required
fatherMiddleName String required
fatherLastName String required
motherName String required
motherMiddleName String required
motherLastName String required
aadharNo Long required
dateOfBirth LocalDate required
placeOfBirth String required
religion Religion required
caste Caste required
subCaste String required
age Integer required
sex Gender required
bloodGroup Bloodgroup required
addressLineOne String required
addressLineTwo String required
addressLineThree String required
town String required
state String required
country String required
pincode Long required
studentContactNumber String required
alternateContactNumber String
studentEmailAddress String required
alternateEmailAddress String
relationWithStudent RelationWithStudentEnum required
emergencyContactName String required
emergencyContactMiddleName String required
emergencyContactLastName String required
emergencyContactNo String required
emergencyContactEmailAddress String required
uploadPhoto String required
admissionNo Long
rollNo String
studentType StudentTypeEnum required
}


enum StaffType{
 TEACHING, NONTEACHING, GUEST
}

entity Teacher{
teacherName String required
teacherMiddleName String required
teacherLastName String required
fatherName String required
fatherMiddleName String required
fatherLastName String required
spouseName String
spouseMiddleName String
spouseLastName String
motherName String required
motherMiddleName String required
motherLastName String required
aadharNo Long required
dateOfBirth LocalDate required
placeOfBirth String required
religion Religion required
caste Caste required
subCaste String required
age Integer required
sex Gender required
bloodGroup Bloodgroup required
addressLineOne String required
addressLineTwo String required
addressLineThree String required
town String required
state String required
country String required
pincode Long required
teacherContactNumber String required
alternateContactNumber String
teacherEmailAddress String required
alternateEmailAddress String
relationWithStaff RelationWithStudentEnum required
emergencyContactName String required
emergencyContactMiddleName String
emergencyContactLastName String required
emergencyContactNo String required
emergencyContactEmailAddress String required
uploadPhoto String required
status Status required
employeeId Long
designation String required
staffType StaffType required
}

entity AcademicYear{
year String required
startDate LocalDate required
endDate LocalDate required
status Status required
}

entity Holiday{
holidayDesc String required
holidayDate LocalDate required
holidayStatus Status required
}

entity Teach{
desc String
}

entity AttendanceMaster{
desc String
}

entity Lecture{
lecDate LocalDate required
lastUpdatedOn LocalDate required
lastUpdatedBy String required
startTime String required
endTime String required
}

enum LecStatusEnum{
ACTIVE,DEACTIVE,CANCELLED
}

entity StudentAttendance{
attendanceStatus AttendanceStatusEnum required
comments String
}


enum AttendanceStatusEnum{
PRESENT,ABSENT
}

enum NameOfBank{
HDFC, SBI, ICICI, ANDHRABANK
}

enum TypeOfCollege{
PRIVATE, PUBLIC
}

entity LegalEntity{
logoPath String
logoFileName String
logoFile String
legalNameOfTheCollege String required
typeOfCollege TypeOfCollege required
dateOfIncorporation LocalDate required
registeredOfficeAddress1 String required
registeredOfficeAddress2 String
registeredOfficeAddress3 String
registeredOfficeAddress4 String
registeredOfficeAddress5 String
collegeIdentificationNumber String required
pan String required
tan String required
tanCircleNumber String required
citTdsLocation String required
formSignatory Long required
pfNumber String required
pfRegistrationDate LocalDate required
pfSignatory Long required
esiNumber String required
esiRegistrationDate LocalDate required
esiSignatory Long required
ptNumber String required
ptRegistrationDate LocalDate required
ptSignatory Long required
}

entity AuthorizedSignatory{
signatoryName String required
signatoryFatherName String required
signatoryDesignation String required
address1 String required
address2 String
address3 String
address4 String
address5 String
email String required
panCardNumber String required
}

entity BankAccounts{
nameOfBank NameOfBank required
accountNumber Long required
typeOfAccount String required
ifscCode String required
branchAddress String required
corporateId Integer required
}

entity Country{
	CountryName String required
	CountryCode String required
	IsdCode String
}

entity Currency{
	CurrencyName String required
	CurrencyCode String
	CurrencySymbol String
}

entity State{
	StateName String required
	DivisionType String required
	StateCode String required
}

entity City{
	CityName String required
	CityCode String
	StdCode String
}

entity Facility {
transport Status
mess Status
gym Status
culturalClass Status
library Status
sports Status
swimming Status
extraClass Status
handicrafts Status
}

entity FeeCategory {
categoryName String required
description String required
}

entity TransportRoute {
routeName String required
routeDetails String required
routeMapUrl String required
}

entity FeeDetails {
feeParticularsName String required
feeParticularDesc  String required
studentType StudentTypeEnum required
gender Gender required
amount Long required
}

entity DueDate {
paymentMethod String required
installments Integer required
dayDesc String required
paymentDate LocalDate required
frequency Frequency required
}

entity PaymentRemainder {
feeRemainder Status required
noticeDay Integer required
overDueRemainder Status required
remainderRecipients String required
}

entity LateFee {
assignLateFee Status required
lateFeeDays Integer required
fixed Status
percentage Status
fixedCharges Long
percentCharges Long
lateFeeAssignmentFrequency Frequency required
}

entity Invoice {
invoiceNumber String required
amountPaid Long required
paymentDate LocalDate required
nextPaymentDate LocalDate required
outStandingAmount Long required
modeOfPayment ModeOfPayment required
chequeNumber Long
demandDraftNumber Long
onlineTxnRefNumber String
paymentStatus InvoicePaymentStatus required
comments String required
updatedBy String required
updatedOn LocalDate required
}
entity CompetitiveExam {
testName String required
testScore Integer required
enrollmentNo Long required
rank Long required
}

entity Documents{
documentName String required
upload String required
}

entity AcademicHistory{
    qualification String required
    yearOfPassing String required
    institution String required
    university String required
    enrollmentNo Long required
    score Long required
    percentage Integer required
}

enum CourseEnum {
    BTECH,MTECH,BBA,MBA
}

enum AdmissionStatusEnum{
    RECEIVED, INPROCESS, DECLINED, ACCEPTED
}

enum EnquiryStatus{
    RECEIVED, FOLLOWUP, DECLINED, CONVERTED
}

enum ModeOfEnquiry{
    INPERSON, TELEPHONE, EMAIL
}

enum GradesEnum{
    Aplus,A,Bplus,B,Cplus,C
}


entity AdmissionApplication{
    admissionStatus AdmissionStatusEnum required
    course CourseEnum required
    date LocalDate required
    comments String required
}

entity AdmissionEnquiry {
    studentName String required
    mobileNumber String required
    alternateMobileNumber String
    email String
    courseApplyingFor CourseEnum required
    modeOfEnquiry ModeOfEnquiry required
    status EnquiryStatus required
    description String required
    enquiryDate LocalDate required
    updatedOn LocalDate
    updatedBy String
}


entity AdminAttendance{
    updatedOn LocalDate
    updatedBy String
}

enum SemesterEnum{
    SEMESTER1,SEMESTER2,SEMESTER3,SEMESTER4,SEMESTER5,SEMESTER6,SEMESTER7,SEMESTER8
}

entity AcademicExamSetting {
    examType String required
    semester SemesterEnum required
    subject String
    examDate LocalDate required
    day String required
    duration String required
    startTime String required
    endTime String required
    total Integer required
    passing Integer required
    actions String
}

entity TypeOfGrading{
    minMarks  Integer required
    maxMarks Integer required
    grades GradesEnum required
}

relationship ManyToOne {
Student{department required} to Department ,
Student{batch required} to Batch ,
Student{section required} to Section,
Student{branch required} to Branch,
Branch{college} to College,
Branch{city} to City,
Branch{state} to State,
Department{branch} to Branch,
Department{academicyear} to AcademicYear,
Subject{department} to Department,
Batch{department} to Department,
Section{batch} to Batch,
Holiday{academicyear} to AcademicYear,
Lecture{attendancemaster} to AttendanceMaster,
Term{academicyear} to AcademicYear,
StudentAttendance{student} to Student,
StudentAttendance{lecture} to Lecture,
AttendanceMaster{batch} to Batch,
Subject{batch} to Batch,
AttendanceMaster{section} to Section,
AttendanceMaster{teach} to Teach,
Teach{subject} to Subject,
Teach{teacher} to Teacher,
Teacher {department} to Department,
Teacher{branch} to Branch,
AuthorizedSignatory{branch} to Branch,
AuthorizedSignatory{college} to College,
BankAccounts{branch} to Branch,
BankAccounts{college} to College,
LegalEntity{branch} to Branch,
LegalEntity{college} to College,
LegalEntity{state} to State,
LegalEntity{city} to City,
City{State} to State,
State{Country} to Country,
Currency{Country} to Country
FeeDetails{feeCategory} to FeeCategory ,
FeeDetails{batch} to Batch ,
FeeDetails{facility} to Facility,
FeeDetails{transportRoute} to TransportRoute,
FeeDetails{college} to College,
FeeDetails{department} to Department,
FeeDetails{branch} to Branch,
FeeDetails{academicYear} to AcademicYear,
DueDate{college} to College,
DueDate{branch} to Branch,
PaymentRemainder{dueDate} to DueDate,
PaymentRemainder{college} to College,
PaymentRemainder{branch} to Branch,
LateFee{college} to College,
LateFee{branch} to Branch,
Facility{academicYear} to AcademicYear,
Facility{branch} to Branch,
Facility{student} to Student,
Invoice{feeCategory} to FeeCategory,
Invoice{feeDetails} to FeeDetails,
Invoice{dueDate} to DueDate,
Invoice{paymentRemainder} to PaymentRemainder,
Invoice{college} to College,
Invoice{branch} to Branch,
Invoice{student} to Student,
Invoice{academicYear} to AcademicYear
CompetitiveExam{student} to Student,
Documents{student} to Student,
AcademicHistory{student} to Student,
TypeOfGrading{academicExamSetting} to AcademicExamSetting,
AdmissionApplication{student} to Student,
AdmissionEnquiry{branch} to Branch,
AdmissionEnquiry{admissionApplication} to AdmissionApplication,
AdminAttendance{lecture} to Lecture,
AdminAttendance{branch} to Branch,
AdminAttendance{college} to College,
AdminAttendance{department} to Department,
AdminAttendance{academicyear} to AcademicYear,
AdminAttendance{section} to Section,
AdminAttendance{student} to Student,
AcademicExamSetting{department} to Department,
AcademicExamSetting{academicyear} to AcademicYear,
AcademicExamSetting{section} to Section,
MetaLecture{branch} to Branch,
MetaLecture{department} to Department,
MetaLecture{subject} to Subject,
MetaLecture{teacher} to Teacher,
MetaLecture{term} to Term,
MetaLecture{academicyear} to AcademicYear,
MetaLecture{section} to Section,
MetaLecture{batch} to Batch
}

dto * with mapstruct
service all with serviceImpl
